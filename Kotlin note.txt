fun main() {
  println("Hello World")
}
//Before Kotlin version 1.3:
fun main(args : Array<String>) {
  println("Hello World")
}

~output: println() / print()
~comments: // /**/

~variables: var(can be changed) val(const) //can know what type we assign
   var name = "John"      // var name: String = "John" ->if without assigning
   val birthyear = 1975   // val birthyear: Int = 1975->must be assigned
   //+ to combine text and text/int or int+int
   //name with "camelCase" and can use $, _
~Number type: Byte Short Int(usually be return) Long(can end with an "L")
                          Float(end with an "F") Double //can with "e"/"E"+n ->10^n
~Boolean type: Boolean(true and false)
~Character type: Char(cannot use ASCII value) String
~Array type: val name = arrayOf("a", "b", "c", "d") //name.size get 4
                        if ("a" in name) {}
                        for(x in name){ println(x)} //print all elements
~type Conversion: toByte() toShort() toInt() toLong() toFloat() toDouble() toChar() //ex: x.toLong()
~String: [0] first element and [1] second element...
               name.___ //operation properties and functions
               properties: length 
               functions: toUpperCase() toLowerCase() compareTo(string) indexOf("finding string") plus("=a+b")
~string templates: in "" plus '$' and name to add variables

~arithmetic operator: + - * / % ++ --
~assignment operator: = += -= *= /= %=
~comparison operator: == != > < >= <=
~logical operator: && || !

~if..else if..else..
   expression: val name = if (condition) {"a"} else {"b"}
                       val name = if (condition) "a" else "b" //when only statement
~when: val result = when (day) {
                 1 -> "Monday"
                 2 -> "Tuesday"
                 3 -> "Wednesday"
                 4 -> "Thursday"
                 5 -> "Friday"
                 6 -> "Saturday"
                 7 -> "Sunday"
                 else -> "Invalid day."  }

~loop: while do/while for(no traditional for loop)
~range: 
              for (chars in 'a'..'x') { println(chars)}
              for (nums in 5..15) { println(nums)} //first and last is included
              if (2 in nums) {  println("It exists!")} 
~break(jump out of a loop) continue(break one iteration)

~function: fun Function(fname: String):Int{return (0)}
                   fun Function(fname: String)=0

~OOP: Object-Oriented Programming has Class and Object
~class: 
              class Car {
                 var brand = ""
                 var model = ""
                 var year = 0   } 
              val c1 = Car()
              c1.brand = "Ford"
              c1.model = "Mustang"
              c1.year = 1969
    //class Car(var brand: String, var model: String, var year: Int){
                //Class functionfunction }
    //val c1 = Car("Ford", "Mustang", 1969)
~inheritance: subclass(child) superclass(parent)
            open class MyParentClass {} //open make other inherit
            class ChildClass: ParentClass() {}
